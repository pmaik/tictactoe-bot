[{"/home/maneesh/Desktop/tictactoe/src/index.js":"1","/home/maneesh/Desktop/tictactoe/src/App.js":"2","/home/maneesh/Desktop/tictactoe/src/components/navbar.jsx":"3","/home/maneesh/Desktop/tictactoe/src/reportWebVitals.js":"4","/home/maneesh/Desktop/tictactoe/src/components/board.jsx":"5"},{"size":520,"mtime":1611224678355,"results":"6","hashOfConfig":"7"},{"size":369,"mtime":1611317373382,"results":"8","hashOfConfig":"7"},{"size":344,"mtime":1611157220540,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1609269142916,"results":"10","hashOfConfig":"7"},{"size":8932,"mtime":1611422633106,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1r8yecz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/maneesh/Desktop/tictactoe/src/index.js",[],["25","26"],"/home/maneesh/Desktop/tictactoe/src/App.js",["27"],"import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport Navbar from './components/navbar';\nimport Board from './components/board';\nimport './App.css';\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return (\n      <React.Fragment>\n        <Navbar />\n        <Board />\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;","/home/maneesh/Desktop/tictactoe/src/components/navbar.jsx",[],"/home/maneesh/Desktop/tictactoe/src/reportWebVitals.js",[],"/home/maneesh/Desktop/tictactoe/src/components/board.jsx",["28"],"import React, { Component } from 'react';\n\nclass Board extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            B:[0,0,0,0,0,0,0,0,0],\n            circleUrl:\"circle.svg\",\n            crossUrl:\"cross.svg\",\n            player:0,\n            text:\"Defeate me if you can!!!\",\n            class: \"heading2\"\n        }\n\n        // this.handleClick = this.handleClick.bind(this);\n    }\n    \n    countEmptyBox(){\n        var count = 0;\n        for(var i=0; i<9; i++){\n            if(this.state.B[i] === 0){\n                count++;\n            }\n        }\n        return count;\n    }\n\n    findBestIndex(){\n        var idx = -1;\n        var cnt = 0;\n        var i;\n\n        //*********************************************************/\n        // Check for the winning \n        for( i=0; i<=8; i+=4){\n            if(this.state.B[i] === 2){\n                cnt++;\n            }\n            else if(this.state.B[i] === 0){\n                idx = i; \n            }\n        }\n        if(cnt === 2 && idx !== -1){\n            return idx;\n        }\n\n        idx=-1; cnt=0;\n        for( i=2; i<=6; i+=2){\n            if(this.state.B[i] === 2){\n                cnt++;\n            }\n            else if(this.state.B[i] === 0){\n                idx = i; \n            }\n        }\n        if(cnt === 2 && idx !== -1){\n            return idx;\n        }\n\n        for(i=0; i<=6; i+=3)\n        {\n            idx=-1; cnt=0;\n            for(var j=i; j<i+3; j++){\n                if(this.state.B[j] === 2){\n                    cnt++;\n                }\n                else if(this.state.B[j] === 0){\n                    idx = j;\n                }\n            }\n            if(cnt === 2 && idx !== -1){\n                return idx;\n            }\n        }\n\n        for(i=0; i<=2; i++)\n        {\n            idx=-1; cnt=0;\n            for(j=i; j<=i+6; j+=3){\n                if(this.state.B[j] === 2){\n                    cnt++;\n                }\n                else if(this.state.B[j] === 0){\n                    idx = j;\n                }\n            }\n            if(cnt === 2 && idx !== -1){\n                return idx;\n            }\n        }\n\n        //*************************************************************/\n        // Check for Opposition winning \n        idx = -1; cnt = 0;\n        for( i=0; i<=8; i+=4){\n            if(this.state.B[i] === 1){\n                cnt++;\n            }\n            else if(this.state.B[i] === 0){\n                idx = i; \n            }\n        }\n        if(cnt === 2 && idx !== -1){\n            return idx;\n        }\n\n        idx=-1; cnt=0;\n        for( i=2; i<=6; i+=2){\n            if(this.state.B[i] === 1){\n                cnt++;\n            }\n            else if(this.state.B[i] === 0){\n                idx = i; \n            }\n        }\n        if(cnt === 2 && idx !== -1){\n            return idx;\n        }\n\n        for(i=0; i<=6; i+=3)\n        {\n            idx=-1; cnt=0;\n            for(var j=i; j<i+3; j++){\n                if(this.state.B[j] === 1){\n                    cnt++;\n                }\n                else if(this.state.B[j] === 0){\n                    idx = j;\n                }\n            }\n            if(cnt === 2 && idx !== -1){\n                return idx;\n            }\n        }\n\n        for(i=0; i<=2; i++)\n        {\n            idx=-1; cnt=0;\n            for(j=i; j<=i+6; j+=3){\n                if(this.state.B[j] === 1){\n                    cnt++;\n                }\n                else if(this.state.B[j] === 0){\n                    idx = j;\n                }\n            }\n            if(cnt === 2 && idx !== -1){\n                return idx;\n            }\n        }\n\n        if(this.state.B[4] === 0){\n            return 4;\n        }\n\n        for(i=0; i<=8; i+=2){\n            if(this.state.B[i] === 0){\n                return i;\n            }\n        }\n\n        for(i=1; i<=7; i+=2){\n            if(this.state.B[i] === 0){\n                return i;\n            }\n        }\n    }\n\n    checkWin(){\n        var cnt = 0;\n        var i;\n        for(i=2; i<=8; i+=4){\n            if(this.state.B[i] === 2){\n                cnt++;\n            }\n        }\n        if(cnt === 3 ){\n            return \"true\";\n        }\n\n        cnt = 0;\n        for(i=2; i<=6; i+=2){\n            if(this.state.B[i] === 2){\n                cnt++;\n            }\n        }   \n        if(cnt === 3){\n            return \"true\";\n        }\n\n        for(i=0; i<=6; i+=3)\n        {\n            cnt=0;\n            for(var j=i; j<i+3; j++){\n                if(this.state.B[j] === 2){\n                    cnt++;\n                }\n            }\n            if(cnt === 3){\n                return \"true\";\n            }\n        }\n\n        for(i=0; i<=2; i++)\n        {\n            cnt=0;\n            for(j=i; j<=i+6; j+=3){\n                if(this.state.B[j] === 2){\n                    cnt++;\n                }\n            }\n            if(cnt === 3){\n                return \"true\";\n            }\n        }\n\n        return \"false\";\n    }\n\n    handleClick(event, index){\n        var B1 = this.state.B;\n        var player1 = this.state.player;\n        // const {player} = this.state; // object destructuring.\n\n        if(B1[index] !== 0){\n            alert(\"You have clicked wrong button! Please click empty button!!\");\n        }\n        else{\n            B1[index] = 1;\n            this.setState(state => ({\n                B:B1,\n                player:player1\n            }));\n\n            if( this.countEmptyBox() === 0){\n                var text2 = \"Match Draw!! Refresh to play again!\";\n                var class2 = \"heading2_draw\";\n                this.setState(state => ({text:text2, class:class2}));\n            }\n            else {\n                var B2 = this.state.B;\n                var idx = this.findBestIndex();\n\n                setTimeout(() => { \n                    B2[idx] = 2;\n                    this.setState(state => ( { B:B2 }) );\n\n                    if(this.checkWin() === \"true\"){\n                        var text1 = \"You Loose the game!! Refresh to play again!!\";\n                        var class1 = \"heading2_loose\";\n                        this.setState(state => ({text:text1, class:class1}));\n                    }\n                 }, 1000);\n                \n            }\n        }\n        \n        \n    }\n\n    render() { \n\n        const circle = <img src={this.state.circleUrl} alt=\"\"></img>;\n        const cross = <img src={this.state.crossUrl} alt=\"\"></img>;\n        const plane = <img src=\"\" alt=\"\"></img>;\n\n        \n        return ( \n            <div className=\"board\">\n                <h2 className={this.state.class}>{this.state.text}</h2>\n                <div>\n                    <button onClick={(event) => this.handleClick(event, 0)}  className=\"box\"> \n                        <span> {this.state.B[0]===1 ? cross : (this.state.B[0]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 1)}  className=\"box\"> \n                        <span> {this.state.B[1]===1 ? cross : (this.state.B[1]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 2)}  className=\"box\"> \n                        <span> {this.state.B[2]===1 ? cross : (this.state.B[2]===2?circle:plane) } </span>\n                    </button>\n                </div>\n                <div>\n                    <button onClick={(event) => this.handleClick(event, 3)}  className=\"box\"> \n                        <span> {this.state.B[3]===1 ? cross : (this.state.B[3]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 4)}  className=\"box\"> \n                        <span> {this.state.B[4]===1 ? cross : (this.state.B[4]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 5)}  className=\"box\"> \n                        <span> {this.state.B[5]===1 ? cross : (this.state.B[5]===2?circle:plane) } </span>\n                    </button>\n                </div>\n                <div>\n                    <button onClick={(event) => this.handleClick(event, 6)}  className=\"box\"> \n                        <span> {this.state.B[6]===1 ? cross : (this.state.B[6]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 7)}  className=\"box\"> \n                        <span> {this.state.B[7]===1 ? cross : (this.state.B[7]===2?circle:plane) } </span>\n                    </button>\n                    <button onClick={(event) => this.handleClick(event, 8)}  className=\"box\"> \n                        <span> {this.state.B[8]===1 ? cross : (this.state.B[8]===2?circle:plane) } </span>\n                    </button>\n                </div>\n                \n            </div>\n         );\n    }\n\n}\n \nexport default Board;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":124,"column":21,"nodeType":"35","messageId":"39","endLine":124,"endColumn":22},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar","no-redeclare","'j' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]